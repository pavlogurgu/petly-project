{"version":3,"file":"static/js/507.27d20b9c.chunk.js","mappings":"4MA4BA,EAFe,CAAEA,OAvBHC,E,QAAAA,GAAOC,EAAAA,EAAPD,EAAkB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC9C,sBAAuB,CACrBC,MAAO,UACPC,OAAO,aAAD,OAAeF,EAAMG,OAAOC,QAGpC,aAAc,CACZC,WAAYL,EAAMM,MAAM,GACxBC,WAAYP,EAAMQ,YAAYC,OAC9BC,SAAUV,EAAMW,UAAUC,KAAKC,EAC/BC,WAAYd,EAAMe,YAAYC,GAC9Bd,OAAO,aAAD,OAAeF,EAAMG,OAAOc,QAClCC,aAAc,QAEhB,mBAAoB,CAClBhB,OAAO,aAAD,OAAeF,EAAMG,OAAOC,QAEpC,yBAA0B,CACxBe,YAAa,MACbC,gBAAiB,SAnBW,K,yBC0BhC,EAxBmB,SAAAC,GACjB,IAAQxB,EAASyB,EAAAA,MACKC,GAASF,EAAvBG,WAAR,OAA+BH,EAA/B,IACA,GAAsBI,EAAAA,EAAAA,IAASJ,GAA/B,eAAOK,EAAP,KAAcC,EAAd,KASA,OAEI,SAAC9B,GAAD,gBACE+B,MAAOD,EAAKE,SAAWF,EAAKC,QAAS,EACrCE,WAXN,WACE,OAAyBC,EAAAA,EAAAA,IAAGJ,EAAM,UAAW,SAA7C,eAAOE,EAAP,KAAgBD,EAAhB,KACA,GAAIC,GAAWD,EACb,OAAOA,CAEV,CAMiBI,IACRN,GACAH,GAIX,ECzBD,G,4NCGMU,GAAYnC,EAAAA,EAAAA,GAAOoC,EAAAA,GAAPpC,CAAH,+eAKmB,qBAAGE,MAAkBmC,YAAYC,MAAjC,IAMhB,qBAAGpC,MAAkBqC,QAAQC,eAA7B,IAIgB,qBAAGtC,MAAkBmC,YAAYI,OAAjC,IAKhB,qBAAGvC,MAAkBqC,QAAQC,eAA7B,IA4ElB,EATe,CACbE,OAhEY1C,EAAAA,EAAAA,GAAO,KAAPA,CAAH,qTACA,SAAA2C,GAAI,OAAIA,EAAKzC,MAAMG,OAAOS,IAAtB,IAKE,qBAAGZ,MAAkBM,MAAM,EAA3B,IACA,SAAAmC,GAAI,OAAIA,EAAKzC,MAAMQ,YAAYkC,IAA3B,IACP,SAAAD,GAAI,OAAIA,EAAKzC,MAAMW,UAAUgC,QAAQ3B,EAAjC,IACD,SAAAyB,GAAI,OAAIA,EAAKzC,MAAMe,YAAY6B,CAA3B,IAEa,qBAAG5C,MAAkBmC,YAAYC,MAAjC,IACf,qBAAGpC,MAAkBM,MAAM,EAA3B,IACA,SAAAmC,GAAI,OAAIA,EAAKzC,MAAMQ,YAAYqC,MAA3B,IACP,SAAAJ,GAAI,OAAIA,EAAKzC,MAAMW,UAAUgC,QAAQC,CAAjC,IACD,SAAAH,GAAI,OAAIA,EAAKzC,MAAMe,YAAYF,CAA3B,IAkDrBiC,SA7CchD,EAAAA,EAAAA,GAAOiD,EAAAA,EAAPjD,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC7CgD,MAAO,OACPC,QAAS,QAEThD,MAAOD,EAAMG,OAAO+C,MACpBC,WAAYnD,EAAMG,OAAOC,MACzBc,aAAc,OACdhB,OAAO,aAAD,OAAeF,EAAMG,OAAOc,QAClCmC,cAAe,OAEf/C,WAAYL,EAAMM,MAAM,GACxBC,WAAYP,EAAMQ,YAAYqC,OAC9BnC,SAAUV,EAAMW,UAAUC,KAAKyC,GAC/BvC,WAAYd,EAAMe,YAAYF,EAE9B,kBAAmB,CACjBO,gBAAiBpB,EAAMG,OAAOc,OAC9BhB,MAAOD,EAAMG,OAAOC,OAjBO,IA8C7BkD,iBAzBsBxD,EAAAA,EAAAA,GAAO,IAAPA,CAAH,4JACZ,SAAA2C,GAAI,OAAIA,EAAKzC,MAAMG,OAAOoD,eAAtB,IAME,SAAAd,GAAI,OAAIA,EAAKzC,MAAMM,MAAM,EAArB,IACJ,SAAAmC,GAAI,OAAIA,EAAKzC,MAAMQ,YAAYC,MAA3B,IACP,SAAAgC,GAAI,OAAIA,EAAKzC,MAAMW,UAAUC,KAAKI,EAA9B,IACD,SAAAyB,GAAI,OAAIA,EAAKzC,MAAMe,YAAYC,EAA3B,IAgBjBwC,mBAbwB1D,EAAAA,EAAAA,GAAO2D,EAAAA,GAAP3D,CAAH,sEAEZ,SAAA2C,GAAI,OAAIA,EAAKzC,MAAMG,OAAOuD,KAAtB,IAYbzB,UAAAA,EACA0B,WAVgB7D,EAAAA,EAAAA,GAAO,MAAPA,CAAH,4C,6BCzEP8D,EAAUC,EAAAA,EAAAA,MAEZC,EAAoB,CACxBC,MAAO,GACPC,SAAU,IAGNC,EAA0BC,EAAAA,KAAaC,MAAM,CACjDJ,MAAOG,EAAAA,KACJE,IAAI,IACJC,IAAI,IACJC,QACC,8CACA,2BAEJN,SAAUE,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIE,aAmFxC,EAhFkB,WAChB,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAMMC,GAAWC,EAAAA,EAAAA,MAEfpC,EAMElB,EAAAA,MALFwB,EAKExB,EAAAA,QAJFgC,EAIEhC,EAAAA,gBAHFkC,EAGElC,EAAAA,kBAFFW,EAEEX,EAAAA,UADFqC,EACErC,EAAAA,UAcJ,OACE,SAAC,KAAD,CACEuD,cAAef,EACfgB,iBAAkBb,EAClBc,SAhBiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBlB,EAAoBiB,EAApBjB,MAAOC,EAAagB,EAAbhB,SAEfW,EACEf,EAAM,CACJG,MAAOA,EACPC,SAAUA,KAGdiB,GACD,EAGC,UAKE,UAAChD,EAAD,YACE,SAACO,EAAD,qBAEA,SAACmB,EAAD,WACE,UAACuB,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACrE,GAAI,GAAf,UACE,SAAC,IAAD,CAAYsE,KAAK,QAAQC,KAAK,QAAQC,MAAM,QAAQC,WAAS,OAE/D,SAACP,EAAA,GAAD,CAAMG,MAAI,EAACrE,GAAI,GAAf,UACE,SAAC,IAAD,CACEsE,KAAMb,EAAe,WAAa,QAClCc,KAAK,WACLC,MAAM,WACNC,WAAS,EACTC,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CACE,aAAW,6BACXC,QAnDD,WACnBrB,GAAgB,SAAAsB,GAAS,OAAKA,CAAL,GAC1B,EA+CmB,SAIGvB,GACC,SAACwB,EAAA,EAAD,KAEA,SAACC,EAAA,EAAD,mBAWlB,SAACpD,EAAD,CAASwC,KAAK,SAAd,oBACA,UAAChC,EAAD,qCAEE,SAACE,EAAD,CAAmB2C,GAAG,YAAtB,8BAKT,EC7GD,ICAA,ECAkB,WAEhB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["components/FormFields/InputFiels.styled.jsx","components/FormFields/InputField.jsx","components/FormFields/index.js","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","components/LoginForm/index.js","pages/LoginPage/index.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { TextField } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst Input = styled(TextField)(({ theme }) => ({\n  '& label.Mui-focused': {\n    color: '#5e5b5d',\n    border: `1px solid ${theme.colors.white}`,\n  },\n\n  '& fieldset': {\n    fontFamily: theme.fonts[0],\n    fontWeight: theme.fontWeights.normal,\n    fontSize: theme.fontSizes.text.s,\n    lineHeight: theme.lineHeights.xs,\n    border: `1px solid ${theme.colors.accent}`,\n    borderRadius: '40px',\n  },\n  '&:hover fieldset': {\n    border: `1px solid ${theme.colors.white}`,\n  },\n  '&.Mui-focused fieldset': {\n    borderWidth: '2px',\n    backgroundColor: 'white',\n  },\n}));\n\nconst styles = { Input };\n\nexport default styles;","import React from 'react';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport styles from './InputFiels.styled';\n\nconst InputField = props => {\n  const { Input} = styles;\n  const { errorText, ...rest } = props;\n  const [field, meta] = useField(props);\n\n  function _renderHelperText() {\n    const [touched, error] = at(meta, 'touched', 'error');\n    if (touched && error) {\n      return error;\n    }\n  }\n\n  return (\n   \n      <Input\n        error={meta.touched && meta.error && true}\n        helperText={_renderHelperText()}\n        {...field}\n        {...rest}\n      />\n  \n  );\n};\n\nexport default InputField;\n","import InputField from \"./InputField\";\n\nexport default InputField","import { styled } from '@mui/system';\nimport { Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@mui/material';\n\nconst LoginForm = styled(Form)`\n  display: grid;\n  margin-top: 42px;\n  width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    margin: auto;\n    margin-top: 204px;\n    width: 608px;\n    padding: 60px 80px 40px 80px;\n    background: #ffffff;\n    box-shadow: ${({ theme }) => theme.shadows.cardsShadowUser};\n    border-radius: 40px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    width: 618px;\n    margin-top: 91px;\n    padding: 60px 80px 60px 80px;\n    background: #ffffff;\n    box-shadow: ${({ theme }) => theme.shadows.cardsShadowUser};\n    border-radius: 40px;\n  }\n`;\nconst Title = styled('h1')`\n  color: ${prop => prop.theme.colors.text};\n\n  align-items: center;\n  text-align: center;\n\n  font-family: ${({ theme }) => theme.fonts[0]};\n  font-weight: ${prop => prop.theme.fontWeights.bold};\n  fon-size: ${prop => prop.theme.fontSizes.headers.xs};\n  line-height: ${prop => prop.theme.lineHeights.m};\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-family: ${({ theme }) => theme.fonts[0]};\n    font-weight: ${prop => prop.theme.fontWeights.medium};\n    fon-size: ${prop => prop.theme.fontSizes.headers.m};\n    line-height: ${prop => prop.theme.lineHeights.s};\n  }\n\n`;\n\nconst Buttons = styled(Button)(({ theme }) => ({\n  width: '100%',\n  padding: '8px 0',\n\n  color: theme.colors.black,\n  background: theme.colors.white,\n  borderRadius: '40px',\n  border: `2px solid ${theme.colors.accent}`,\n  textTransform: 'none',\n\n  fontFamily: theme.fonts[0],\n  fontWeight: theme.fontWeights.medium,\n  fontSize: theme.fontSizes.text.xl,\n  lineHeight: theme.lineHeights.s,\n\n  ':hover, :focus ': {\n    backgroundColor: theme.colors.accent,\n    color: theme.colors.white,\n  },\n}));\n\nconst AccountRedirect = styled('p')`\ncolor: ${prop => prop.theme.colors.placeholderText};\n\n\ntext-align: center;\nmargin-top: 40px;\n\nfont-family: ${prop => prop.theme.fonts[0]};\nfont-weight: ${prop => prop.theme.fontWeights.normal};\nfon-size: ${prop => prop.theme.fontSizes.text.xs};\nline-height: ${prop => prop.theme.lineHeights.xs};\n`;\n\nconst LinkRegisterRoute = styled(Link)`\n  text-decoration: underline;\n  color: ${prop => prop.theme.colors.links};\n`;\n\nconst Container = styled('div')`\n  margin: 40px 0;\n`;\n\nconst styles = {\n  Title,\n  Buttons,\n  AccountRedirect,\n  LinkRegisterRoute,\n  LoginForm, \n  Container\n};\n\nexport default styles","import React from 'react';\nimport { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport InputField from 'components/FormFields';\nimport { Grid, InputAdornment } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nimport styles from './LoginForm.styled';\n\nimport { useDispatch } from 'react-redux';\nimport operations from '../../redux/auth/operations';\n\nconst { login } = operations;\n\nconst formInitialValues = {\n  email: '',\n  password: '',\n};\n\nconst currentValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(10)\n    .max(63)\n    .matches(\n      /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/,\n      'Incorrect email address'\n    ),\n  password: Yup.string().min(7).max(32).required(),\n});\n\nconst LoginForm = () => {\n  const [hidePassword, setHidePassword] = useState(true);\n\n  const showPassword = () => {\n    setHidePassword(prevState => !prevState);\n  };\n\n  const dispatch = useDispatch();\n  const {\n    Title,\n    Buttons,\n    AccountRedirect,\n    LinkRegisterRoute,\n    LoginForm,\n    Container,\n  } = styles;\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { email, password } = values;\n\n    dispatch(\n      login({\n        email: email,\n        password: password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={formInitialValues}\n      validationSchema={currentValidationSchema}\n      onSubmit={handleSubmit}\n    >\n      <LoginForm>\n        <Title>Login</Title>\n\n        <Container>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <InputField type=\"email\" name=\"email\" label=\"Email\" fullWidth />\n            </Grid>\n            <Grid item xs={12}>\n              <InputField\n                type={hidePassword ? 'password' : 'input'}\n                name=\"password\"\n                label=\"Password\"\n                fullWidth\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={showPassword}\n                      >\n                        {hidePassword ? (\n                          <VisibilityOffIcon />\n                        ) : (\n                          <VisibilityIcon />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n\n        <Buttons type=\"submit\">Login</Buttons>\n        <AccountRedirect>\n          Don`t have an account?\n          <LinkRegisterRoute to=\"/register\"> Register</LinkRegisterRoute>\n        </AccountRedirect>\n      </LoginForm>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from \"./LoginForm\"\n\nexport default LoginForm","import LoginPage from \"./LoginPage\";\n\nexport default LoginPage","import LoginForm from \"components/LoginForm\"\n\nconst LoginPage = () => {\n\n  return (\n    <div>\n      <LoginForm/>\n    </div>\n  )\n}\n\nexport default LoginPage"],"names":["Input","styled","TextField","theme","color","border","colors","white","fontFamily","fonts","fontWeight","fontWeights","normal","fontSize","fontSizes","text","s","lineHeight","lineHeights","xs","accent","borderRadius","borderWidth","backgroundColor","props","styles","rest","errorText","useField","field","meta","error","touched","helperText","at","_renderHelperText","LoginForm","Form","breakpoints","tablet","shadows","cardsShadowUser","desktop","Title","prop","bold","headers","m","medium","Buttons","Button","width","padding","black","background","textTransform","xl","AccountRedirect","placeholderText","LinkRegisterRoute","Link","links","Container","login","operations","formInitialValues","email","password","currentValidationSchema","Yup","shape","min","max","matches","required","useState","hidePassword","setHidePassword","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","Grid","container","spacing","item","type","name","label","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","prevState","VisibilityOff","Visibility","to"],"sourceRoot":""}