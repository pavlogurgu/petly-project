{"version":3,"file":"static/js/73.c316fc94.chunk.js","mappings":"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","sources":["components/FormFields/InputFiels.styled.jsx","components/FormFields/InputField.jsx","components/FormFields/index.js","components/RegisterForm/Forms/FirstStepInfo/FirstStepInfo.styled.jsx","components/RegisterForm/Forms/FirstStepInfo/FirstStepInfo.jsx","components/RegisterForm/Forms/FirstStepInfo/index.js","components/RegisterForm/Forms/SecondStepInfo/SecondStepInfo.styled.js","components/RegisterForm/Forms/SecondStepInfo/SecondStepInfo.jsx","components/RegisterForm/Forms/SecondStepInfo/index.js","components/RegisterForm/Forms/VerificationForm/VerificationForm.jsx","components/RegisterForm/Forms/VerificationForm/index.js","components/RegisterForm/FormModel/checkoutFormModel.js","components/RegisterForm/FormModel/validationSchema.js","components/RegisterForm/FormModel/formInitialValues.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","components/RegisterForm/index.js","pages/RegisterPage/index.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { TextField } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst Input = styled(TextField)(({ theme }) => ({\n  '& label.Mui-focused': {\n    color: '#5e5b5d',\n    border: `1px solid ${theme.colors.white}`,\n  },\n\n  '& fieldset': {\n    fontFamily: theme.fonts[0],\n    fontWeight: theme.fontWeights.normal,\n    fontSize: theme.fontSizes.text.s,\n    lineHeight: theme.lineHeights.xs,\n    border: `1px solid ${theme.colors.accent}`,\n    borderRadius: '40px',\n  },\n  '&:hover fieldset': {\n    border: `1px solid ${theme.colors.white}`,\n  },\n  '&.Mui-focused fieldset': {\n    borderWidth: '2px',\n    backgroundColor: 'white',\n  },\n}));\n\nconst styles = { Input };\n\nexport default styles;","import React from 'react';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport styles from './InputFiels.styled';\n\nconst InputField = props => {\n  const { Input} = styles;\n  const { errorText, ...rest } = props;\n  const [field, meta] = useField(props);\n\n  function _renderHelperText() {\n    const [touched, error] = at(meta, 'touched', 'error');\n    if (touched && error) {\n      return error;\n    }\n  }\n\n  return (\n   \n      <Input\n        error={meta.touched && meta.error && true}\n        helperText={_renderHelperText()}\n        {...field}\n        {...rest}\n      />\n  \n  );\n};\n\nexport default InputField;\n","import InputField from \"./InputField\";\n\nexport default InputField","// import { TextField } from '@mui/material';\nimport { styled } from '@mui/system';\n\n// const Input = styled(TextField)`\n//       background: '#fdf7f2',\n//       border: '1px solid rgba(245, 146, 86, 0.5)',\n//        border-radius: 40px;\n//       `;\n\n// const styles = { Input };\n\n// export default styles;\n\nconst Container = styled('div')`\nmargin: 40px 0;\n`\nconst styles = { Container }\n\nexport default styles\n\n","import React from 'react';\nimport { useState } from 'react';\nimport InputField from 'components/FormFields';\nimport styles from './FirstStepInfo.styled';\nimport { Grid, InputAdornment } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst FirstStepInfo = props => {\n  const [hidePassword, setHidePassword] = useState(true);\n\n  const showPassword = () => {\n    setHidePassword(prevState =>!prevState);\n  };\n\n  const {\n    formField: { email, password, confirmPassword },\n  } = props;\nconst {Container}= styles\n\n  return (\n    <React.Fragment>\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <InputField\n              name={email.name}\n              label={email.label}\n              type=\"email\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputField\n              name={password.name}\n              label={password.label}\n              type={hidePassword ? 'password' : 'input'}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={showPassword}\n                    >\n                      {hidePassword ? (\n                        <VisibilityOffIcon />\n                      ) : (\n                        <VisibilityIcon />\n                      )}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputField\n              name={confirmPassword.name}\n              label={confirmPassword.label}\n              type={hidePassword ? 'password' : 'input'}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={showPassword}\n                    >\n                      {hidePassword ? (\n                        <VisibilityOffIcon />\n                      ) : (\n                        <VisibilityIcon />\n                      )}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n};\nexport default FirstStepInfo;\n","import FirstStepInfo from \"./FirstStepInfo\";\n\nexport default FirstStepInfo","import { styled } from '@mui/system';\n\nconst Container = styled('div')`\n  margin: 40px 0;\n`;\n\nconst styles = { Container };\n\nexport default styles;\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport InputField from 'components/FormFields';\nimport styles from './SecondStepInfo.styled';\n\nconst SecondStepInfo = props => {\n  const {\n    formField: { name, city, phone },\n  } = props;\n  const { Container } = styles\n\n  return (\n    <React.Fragment>\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <InputField\n              name={name.name}\n              label={name.label}\n              type=\"text\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <InputField\n              name={city.name}\n              label={city.label}\n              type=\"text\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <InputField\n              id=\"tel\"\n              placeholder=\"+380\"\n              name={phone.name}\n              label={phone.label}\n              type=\"tel\"\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default SecondStepInfo;\n","import SecondStepInfo from \"./SecondStepInfo\";\n\nexport default SecondStepInfo","import React from 'react';\nimport { useFormikContext } from 'formik';\nimport { Typography, Grid } from '@mui/material';\n\nconst VerificationForm = props => {\n  const { values: formValues } = useFormikContext();\n  const { email, name, city, phone } = formValues;\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item container direction=\"column\" xs={12}>\n          <Typography variant=\"h6\" gutterBottom>\n            User details:\n          </Typography>\n          <Grid container>\n            <React.Fragment>\n              <Grid item xs={12}>\n                <Typography gutterBottom>Email:{` ${email}`}</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography gutterBottom>Name: {` ${name} `}</Typography>\n              </Grid>\n            </React.Fragment>\n            <React.Fragment>\n              <Grid item xs={12}>\n                <Typography gutterBottom>City:{`${city}`}</Typography>\n              </Grid>\n            </React.Fragment>\n            <React.Fragment>\n              <Grid item xs={12}>\n                <Typography gutterBottom>\n                  Mobile phone: {` ${phone}`}\n                </Typography>\n              </Grid>\n            </React.Fragment>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default VerificationForm;\n","import VerificationForm from \"./VerificationForm\";\n\nexport default VerificationForm","const checkoutFormModel = {\n  formId: 'checkoutForm',\n  formField: {\n    email: {\n      name: 'email',\n      label: 'Email*',\n      requiredErrorMsg: 'Email is required',\n    },\n    password: {\n      name: 'password',\n      label: 'Password*',\n      requiredErrorMsg: 'Password is required',\n    },\n    confirmPassword: {\n      name: 'confirmPassword',\n      label: 'ConfirmPassword*',\n      requiredErrorMsg: 'ConfirmPassword is required',\n    },\n    name: {\n      name: 'name',\n      label: 'Name',\n      requiredErrorMsg: 'Name is required',\n    },\n    city: {\n      name: 'city',\n      label: 'City',\n      requiredErrorMsg: 'City is required',\n      defaultValue: 'unknown'\n    },\n    phone: {\n      name: 'phone',\n      label: 'Mobile phone',\n      requiredErrorMsg: 'Phone is required',\n    },\n  },\n};\n\nexport default checkoutFormModel;\n","import * as Yup from 'yup';\nimport checkoutFormModel from './checkoutFormModel';\n\nconst {\n  formField: { email, password, confirmPassword, name, city, phone },\n} = checkoutFormModel;\n\nconst validationSchema = [\n  Yup.object().shape({\n    [email.name]: Yup.string()\n      .min(10)\n      .max(63)\n      .matches(\n        /^(([a-zA-Z0-9]{1}[a-zA-Z0-9_\\-.]{1,})@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5}))$/,\n        `email can contain only latin letters, numbers and symbols . -  _ (dot, hyphen, underscore) and can't start from hyphen`\n      )\n      .required(`${email.requiredErrorMsg}`),\n    [password.name]: Yup.string()\n      .matches(\n        /^[^ ]{7,32}$/,\n        'password should be from 7 to 32 characters long, without spaces'\n      )\n      .required(`${password.requiredErrorMsg}`),\n    [confirmPassword.name]: Yup.string()\n      .min(7)\n      .max(32)\n      .required(`${confirmPassword.requiredErrorMsg}`)\n      .oneOf([Yup.ref('password')], 'passwords does not match'),\n  }),\n  Yup.object().shape({\n    [name.name]: Yup.string()\n      .min(2)\n      .max(16)\n      .matches(\n        /^[^ ][a-zA-zа-яіїєА-ЯІЇЄ ]+$/,\n        `name can contain only Latin and Cyrillic characters and can't start from spaces`\n      )\n      .required(`${name.requiredErrorMsg}`),\n    [city.name]: Yup.string()\n      .min(3)\n      .max(19)\n      .matches(\n        /^[^ -,][a-zA-zа-яіїєА-ЯІЇЄ, -]+[^ -]$/,\n        `city can contain only Latin and Cyrillic characters, 3 - 19 symbols and can't start or end with spaces and hyphen`\n      ),\n    [phone.name]: Yup.string()\n      .min(13)\n      .max(13)\n      .matches(\n        /^[+]380\\d{3}\\d{2}\\d{2}\\d{2}$/,\n        `Phone number can contain only 13 symbols: starts from  '+380' and 9 digits after.`\n      ),\n  }),\n];\n\nexport default validationSchema;\n","import checkoutFormModel from './checkoutFormModel';\nconst {\n  formField: { email, password, confirmPassword, name, city, phone },\n} = checkoutFormModel;\n\n\nconst formInitialValues = {\n  [email.name]: '',\n  [password.name]: '',\n  [confirmPassword.name]: '',\n  [name.name]: '',\n  [city.name]: '',\n  [phone.name]: '',\n};\n\nexport default formInitialValues;","import { Button } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { Link } from 'react-router-dom';\nimport { Form } from 'formik';\n\nconst RegisterForm = styled(Form)`\n  display: grid;\n  margin-top: 42px;\n  width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    display: grid;\n    margin: auto;\n    margin-top: 173px;\n    width: 608px;\n    padding: 60px 80px 40px 80px;\n    background: #ffffff;\n    box-shadow: ${({ theme }) => theme.shadows.cardsShadowUser};\n    border-radius: 40px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    width: 618px;\n    padding: 60px 80px;\n    background: #ffffff;\n    box-shadow: ${({ theme }) => theme.shadows.cardsShadowUser};\n    border-radius: 40px;\n  }\n`;\n\nconst Title = styled('h1')`\n  color: ${prop => prop.theme.colors.text};\n\n  align-items: center;\n  text-align: center;\n\n  font-family: ${({ theme }) => theme.fonts[0]};\n  font-weight: ${prop => prop.theme.fontWeights.bold};\n  fon-size: ${prop => prop.theme.fontSizes.headers.xs};\n  line-height: ${prop => prop.theme.lineHeights.m};\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-family: ${({ theme }) => theme.fonts[0]};\n    font-weight: ${prop => prop.theme.fontWeights.medium};\n    fon-size: ${prop => prop.theme.fontSizes.headers.m};\n    line-height: ${prop => prop.theme.lineHeights.s};\n  }\n`;\n\nconst Buttons = styled(Button)(({ theme }) => ({\n  width: '100%',\n  padding: '8px 0',\n\n  color: theme.colors.black,\n  background: theme.colors.white,\n  borderRadius: '40px',\n  border: `2px solid ${theme.colors.accent}`,\n  textTransform: 'none',\n\n  fontFamily: theme.fonts[0],\n  fontWeight: theme.fontWeights.medium,\n  fontSize: theme.fontSizes.text.xl,\n  lineHeight: theme.lineHeights.s,\n\n  ':hover, :focus ': {\n    backgroundColor: theme.colors.accent,\n    color: theme.colors.white,\n  },\n}));\n\nconst AccountRedirect = styled('p')`\n  color: ${prop => prop.theme.colors.placeholderText};\n\n  text-align: center;\n  margin-top: 40px;\n\n  font-family: ${prop => prop.theme.fonts[0]};\n  font-weight: ${prop => prop.theme.fontWeights.normal};\n  fon-size: ${prop => prop.theme.fontSizes.text.xs};\n  line-height: ${prop => prop.theme.lineHeights.xs};\n`;\n\nconst LinkLoginRoute = styled(Link)`\n  text-decoration: underline;\n  color: ${prop => prop.theme.colors.links};\n`;\n\nconst styles = {\n  Title,\n  Buttons,\n  AccountRedirect,\n  LinkLoginRoute,\n  RegisterForm,\n};\n\nexport default styles;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\n\nimport FirstStepInfo from './Forms/FirstStepInfo';\nimport SecondStepInfo from './Forms/SecondStepInfo';\nimport VerificationForm from './Forms/VerificationForm';\n\nimport validationSchema from './FormModel/validationSchema';\nimport checkoutFormModel from './FormModel/checkoutFormModel';\nimport formInitialValues from './FormModel/formInitialValues';\n\nimport { useDispatch } from 'react-redux';\nimport operations from '../../redux/auth/operations';\nimport Loader from 'components/Loader';\n\nimport styles from './RegisterForm.styled';\nconst { register } = operations;\n\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\nconst { formId, formField } = checkoutFormModel;\n\nfunction _renderStepContent(step) {\n  switch (step) {\n    case 0:\n      return <FirstStepInfo formField={formField} />;\n    case 1:\n      return <SecondStepInfo formField={formField} />;\n    case 2:\n      return <VerificationForm formField={formField} />;\n    default:\n      return;\n  }\n}\n\nconst RegisterForm = () => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [activeLoader, setActiveLoader] = useState(false);\n  const currentValidationSchema = validationSchema[activeStep];\n  const isLastStep = activeStep === steps.length - 1;\n  const dispatch = useDispatch();\n\n  const { Title, LinkLoginRoute, Buttons, RegisterForm, AccountRedirect } =\n    styles;\n\n  const _submitForm = values => {\n    const { email, password, name, city, phone } = values;\n    const ifCityNoString = city === '' ? 'unknown' : city\n    const ifPhoneNoString = phone === '' ? '+380000000000' : phone;\n\n    dispatch(\n      register({\n        email: email.toLowerCase().trim(),\n        password: password.toLowerCase().trim(),\n        name: name.toLowerCase().trim(),\n        city: ifCityNoString.toLowerCase().trim(),\n        phone: ifPhoneNoString.toLowerCase().trim(),\n      })\n    );\n    setActiveLoader(true);\n    setTimeout(() => {\n      setActiveStep(0);\n      setActiveLoader(false)\n    }, 3000);\n  };\n\n  const _handleSubmit = (values, actions) => {\n    if (isLastStep) {\n      _submitForm(values, actions);\n    } else {\n      setActiveStep(activeStep + 1);\n      actions.setTouched({});\n      actions.setSubmitting(false);\n    }\n  };\n\n  const _handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <Formik\n      initialValues={formInitialValues}\n      validationSchema={currentValidationSchema}\n      onSubmit={_handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <RegisterForm id={formId}>\n          <Title>Registration</Title>\n          {_renderStepContent(activeStep)}\n          {activeLoader ? (\n            <Loader></Loader>\n          ) : (\n            <div>\n              <div>\n                <Buttons type=\"submit\">\n                  {isLastStep ? 'Register' : 'Next'}\n                </Buttons>\n                {activeStep !== 0 && (\n                  <Buttons onClick={_handleBack} style={{ marginTop: 16 }}>\n                    Back\n                  </Buttons>\n                )}\n                <AccountRedirect>\n                  Already have an account?\n                  <LinkLoginRoute to=\"/login\"> Login</LinkLoginRoute>\n                </AccountRedirect>\n              </div>\n            </div>\n          )}\n        </RegisterForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"./RegisterForm\";\n\nexport default RegisterForm","import RegisterPage from \"./RegisterPage\";\n\nexport default RegisterPage","import RegisterForm from 'components/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm></RegisterForm>;\n};\n\nexport default RegisterPage;\n"],"names":["Input","styled","TextField","theme","color","border","colors","white","fontFamily","fonts","fontWeight","fontWeights","normal","fontSize","fontSizes","text","s","lineHeight","lineHeights","xs","accent","borderRadius","borderWidth","backgroundColor","props","styles","rest","errorText","useField","field","meta","error","touched","helperText","at","_renderHelperText","Container","useState","hidePassword","setHidePassword","showPassword","prevState","formField","email","password","confirmPassword","Grid","container","spacing","item","name","label","type","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","VisibilityOff","Visibility","city","phone","md","id","placeholder","formValues","useFormikContext","values","direction","Typography","variant","gutterBottom","formId","requiredErrorMsg","defaultValue","checkoutFormModel","Yup","shape","min","max","matches","required","oneOf","RegisterForm","Form","breakpoints","tablet","shadows","cardsShadowUser","desktop","Title","prop","bold","headers","m","medium","Buttons","Button","width","padding","black","background","textTransform","xl","AccountRedirect","placeholderText","LinkLoginRoute","Link","links","register","operations","steps","_renderStepContent","step","activeStep","setActiveStep","activeLoader","setActiveLoader","currentValidationSchema","validationSchema","isLastStep","length","dispatch","useDispatch","_handleBack","initialValues","formInitialValues","onSubmit","actions","ifCityNoString","ifPhoneNoString","toLowerCase","trim","setTimeout","_submitForm","setTouched","setSubmitting","isSubmitting","Loader","style","marginTop","to"],"sourceRoot":""}